-- Table: "Corpus"

CREATE TABLE "Corpus"
(
  "ID" text NOT NULL,
  type text,
  name text,
  "URI" text,
  CONSTRAINT "Corpus_pkey" PRIMARY KEY ("ID")
);

-- Table: "Languages"

CREATE TABLE "Languages"
(
  "ID" integer NOT NULL,
  "languageName" text,
  CONSTRAINT "Languages_pkey" PRIMARY KEY ("ID")
);

-- Table: "SourceDocuments"

CREATE TABLE "SourceDocuments"
(
  corpus text,
  "publicationDate" date,
  "ID" text NOT NULL,
  "sourceLanguage" text,
  "URI" text,
  CONSTRAINT "SourceDocuments_pkey" PRIMARY KEY ("ID"),
  CONSTRAINT corpus_fk FOREIGN KEY (corpus)
      REFERENCES "Corpus" ("ID") MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

-- Table: "TextChunks"

CREATE TABLE "TextChunks"
(
  value text,
  "beginOffset" integer,
  "endOffset" integer,
  "ID" text NOT NULL,
  "sourceDocument" text,
  CONSTRAINT "TextChunks_pkey" PRIMARY KEY ("ID"),
  CONSTRAINT "TextChunks_sourceDocument_fkey" FOREIGN KEY ("sourceDocument")
      REFERENCES "SourceDocuments" ("ID") MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
);


-- Table: "SourceAlgorithms"

CREATE TABLE "SourceAlgorithms"
(
  "algorithmName" text NOT NULL,
  "contributingSiteName" text,
  CONSTRAINT "SourceAlgorithms_pkey" PRIMARY KEY ("algorithmName")
);

-- Table: "InferencePaths"

CREATE TABLE "InferencePaths"
(
  "ID" integer NOT NULL,
  "xmlInferencePath" text,
  CONSTRAINT "InferencePaths_pkey" PRIMARY KEY ("ID")
);

-- Table: "TextProvenances"

CREATE TABLE "TextProvenances"
(
  "KBId" text,
  confidence double precision,
  "ID" text NOT NULL,
  chunk text,
  "sourceAlgorithm" text,
  CONSTRAINT "TextProvenances_pkey" PRIMARY KEY ("ID"),
  CONSTRAINT "TextProvenances_chunk_fkey" FOREIGN KEY (chunk)
      REFERENCES "TextChunks" ("ID") MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT "TextProvenances_sourceAlgorithm_fkey" FOREIGN KEY ("sourceAlgorithm")
      REFERENCES "SourceAlgorithms" ("algorithmName") MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE INDEX "TextProvenances_KBId" on "TextProvenances" ( "KBId" );

-- Table: "EntityMentionTypes"

CREATE TABLE "EntityMentionTypes"
(
  "ID" text NOT NULL,
  "provenance" text NOT NULL,
  "type" text NOT NULL,
  CONSTRAINT "EntityMentionTypes_pkey" PRIMARY KEY ("ID"),
  CONSTRAINT "EntityMentionTypes_provenance_fkey" FOREIGN KEY (provenance)
      REFERENCES "TextProvenances" ("ID") MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE INDEX "EntityMentionTypes_provenanceID" on "EntityMentionTypes" ( "provenance" );

CREATE TABLE "DocumentTexts"
(
  docID text NOT NULL,
  corpusID text NOT NULL,
  content text NOT NULL,
  CONSTRAINT "DocumentTexts_pkey" PRIMARY KEY (docID, corpusID)
);

CREATE TABLE "SentenceMD5"
(
  sentencemd5id serial NOT NULL,
  hash bytea NOT NULL,
  documentname character varying(100) NOT NULL,
  CONSTRAINT "PK_SentenceMD5" PRIMARY KEY (sentencemd5id)
);

CREATE INDEX "idx_sentencemd5_hash" ON "SentenceMD5" ("hash");

CREATE TABLE "OverlappingDocument"
(
  overlappingdocumentid serial NOT NULL,
  score double precision NOT NULL,
  documentname character varying(100) NOT NULL,
  CONSTRAINT "PK_OverlappingDocument" PRIMARY KEY (overlappingdocumentid)
);

-- Table: "OpenIEArguments"

CREATE TABLE "OpenIEArguments"
(
  "ID" text NOT NULL,
  confidence double precision,
  value text,
  CONSTRAINT "OpenIEArguments_pkey" PRIMARY KEY ("ID")
);

CREATE INDEX "OpenIEArguments_ID" on "OpenIEArguments" ("ID");

-- Table: "OpenIEReations"

CREATE TABLE "OpenIERelations"
(
  "ID" text NOT NULL,
  confidence double precision,
  predicate text NOT NULL,
  "arg1ID" text,
  "arg2ID" text,
  CONSTRAINT "OpenIERelations_pkey" PRIMARY KEY ("ID"),
  CONSTRAINT "OpenIERelations_arg1ID_fkey" FOREIGN KEY ("arg1ID")
      REFERENCES "OpenIEArguments" ("ID") MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT "OpenIERelations_arg2ID_fkey" FOREIGN KEY ("arg2ID")
      REFERENCES "OpenIEArguments" ("ID") MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE INDEX "OpenIERelations_ID" on "OpenIERelations" ("ID");
CREATE INDEX "OpenIERelations_arg1ID" on "OpenIERelations" ("arg1ID");
CREATE INDEX "OpenIERelations_arg2ID" on "OpenIERelations" ("arg2ID");

-- Table: "OpenIEReationProvenances"

CREATE TABLE "OpenIERelationProvenances"
(
  "openIERelationID" text NOT NULL,
  confidence double precision,
  "ID" text NOT NULL,
  chunk text,
  "sourceAlgorithm" text,
  CONSTRAINT "OpenIERelationProvenances_pkey" PRIMARY KEY ("ID"),
  CONSTRAINT "OpenIERelationProvenances_openIERelationID_fkey" FOREIGN KEY
    ("openIERelationID")
      REFERENCES "OpenIERelations" ("ID") MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT "OpenIERelationProvenances_chunk_fkey" FOREIGN KEY (chunk)
      REFERENCES "TextChunks" ("ID") MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT "OpenIERelationProvenances_sourceAlgorithm_fkey" FOREIGN KEY ("sourceAlgorithm")
      REFERENCES "SourceAlgorithms" ("algorithmName") MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE INDEX "OpenIERelationProvenances_openIERelationID" on "OpenIERelationProvenances" ("openIERelationID");

-- Table: "OpenIEArgumentProvenances"

CREATE TABLE "OpenIEArgumentProvenances"
(
  "openIEArgumentID" text NOT NULL,
  confidence double precision,
  "ID" text NOT NULL,
  chunk text,
  "sourceAlgorithm" text,
  CONSTRAINT "OpenIEArgumentProvenances_pkey" PRIMARY KEY ("ID"),
  CONSTRAINT "OpenIEArgumentProvenances_openIEArgumentID_fkey" FOREIGN KEY
    ("openIEArgumentID")
      REFERENCES "OpenIEArguments" ("ID") MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT "OpenIEArgumentProvenances_chunk_fkey" FOREIGN KEY (chunk)
      REFERENCES "TextChunks" ("ID") MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT "OpenIEArgumentProvenances_sourceAlgorithm_fkey" FOREIGN KEY ("sourceAlgorithm")
      REFERENCES "SourceAlgorithms" ("algorithmName") MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE INDEX "OpenIEArgumentProvenances_openIEArgumentID" on "OpenIEArgumentProvenances" ("openIEArgumentID");
