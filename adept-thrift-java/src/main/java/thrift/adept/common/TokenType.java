/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thrift.adept.common;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum TokenType implements org.apache.thrift.TEnum {
  WORD(0),
  PUNCTUATION(1),
  GARBAGE(2),
  LEXEME(3),
  PAUSE_FILLER(4),
  LAUGHTER(5),
  SILENCE(6),
  MUSIC(7),
  TAG(8),
  OTHER(9);

  private final int value;

  private TokenType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static TokenType findByValue(int value) { 
    switch (value) {
      case 0:
        return WORD;
      case 1:
        return PUNCTUATION;
      case 2:
        return GARBAGE;
      case 3:
        return LEXEME;
      case 4:
        return PAUSE_FILLER;
      case 5:
        return LAUGHTER;
      case 6:
        return SILENCE;
      case 7:
        return MUSIC;
      case 8:
        return TAG;
      case 9:
        return OTHER;
      default:
        return null;
    }
  }
}