/*******************************************************************************
 * Raytheon BBN Technologies Corp., March 2013
 * 
 * THIS CODE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS
 * OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 * 
 * Copyright 2013 Raytheon BBN Technologies Corp.  All Rights Reserved.
 ******************************************************************************/
/*
 * 
 */
package adept.common;

import static com.google.common.base.Preconditions.checkArgument;
import adept.metadata.SourceAlgorithm;


/**
 * The Class HltContent is an abstract class that represents all the HLT content
 * generated by DEFT algorithms. All algorithmic output types inherits from
 * HltContent.
 */
public abstract class HltContent extends Item {

	/** The algorithm name. */
	private SourceAlgorithm algorithm;
	
	/**
	 * Instantiates a new hlt content.
	 */
	public HltContent() {
		super();
		// TODO Auto-generated constructor stub
	}

	
	/**
	 * Gets the algorithm name.
	 *
	 * @return the algorithm name
	 */
	public String getAlgorithmName() {
		return algorithm.getAlgorithmName();
	}

	/**
	 * Sets the algorithm name.
	 *
	 * @param algorithmName the new algorithm name
	 */
	public void setAlgorithmName(String algorithmName) {
        checkArgument(algorithmName!=null && algorithmName.trim().length()>0);
		this.algorithm = new SourceAlgorithm(algorithmName, null);
	}
	
	/**
	 * Gets algorithm
	 */
	public SourceAlgorithm getSourceAlgorithm()
	{
		return algorithm;
	}
	
	/**
	 * Sets source algorithm
	 */
	public void setSourceAlgorithm(SourceAlgorithm sourceAlgorithm)
	{
		this.algorithm = sourceAlgorithm;
	}
}
